{"version":3,"file":"static/js/100.10d5103e.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","webpack://samurai-way/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/common/FormControls/FormControls.tsx","hoc/WithRedirectToLogin.tsx","utilities/validators.ts","webpack://samurai-way/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\ntype DialogItemPropsType = {\n    id: string\n    name: string\n}\n\nexport const DialogItem = (props: DialogItemPropsType) => {\n    return (\n        <div>\n            <NavLink to={`/dialogs/${props.id}`}>\n                {props.name}\n            </NavLink>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__3YV8S\"};","import React from 'react';\nimport styles from './Message.module.css';\n\nexport const Message = (props: { message: string }) => {\n    return <div className={styles.dialog}>{props.message}</div>\n};","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport {DialogItem} from './DialogItem/DialogItem';\nimport {Message} from './Message/Message';\nimport {DialogsPropsType} from './DialogsContainer';\nimport {Field, reduxForm} from 'redux-form';\nimport {Textarea} from '../common/FormControls/FormControls';\nimport {maxLength30, minLength2, requiredField} from '../../utilities/validators';\n\n\nexport const Dialogs = (props: DialogsPropsType) => {\n    const dialogElements = props.dialogs.map((d: any) => <DialogItem key={d.id} id={d.id} name={d.name}/>);\n    const messagesElements = props.messages.map((m: any) => <Message key={m.id} message={m.message}/>);\n\n    const addNewMessage = (values: any) => {\n        props.sendMessage(values.newMessageBody)\n    };\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialogsItems}>\n                {dialogElements}\n            </div>\n            <div className={styles.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    );\n};\n\nconst AddMessageForm = (props: any) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    name={'newMessageBody'}\n                    component={Textarea}\n                    validate={[requiredField, maxLength30, minLength2]}\n                    placeholder=\"type new message\"\n                    cols={30}\n                    rows={5}\n                />\n            </div>\n            <div>\n                <button>Send message</button>\n            </div>\n        </form>\n    );\n};\n\nconst AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm);","import React from 'react';\nimport {\n    DialogsPageType,\n    DialogsReducerActionsType,\n    sendMessageAC\n} from '../../redux/dialogs-reducer';\nimport {Dialogs} from './Dialogs';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {compose, Dispatch} from 'redux';\nimport {withRedirectToLogin} from '../../hoc/WithRedirectToLogin';\n\ntype MapDispatchToPropsType = {\n    sendMessage: (newMessageBody: string) => void\n};\n\nexport type DialogsPropsType = DialogsPageType & MapDispatchToPropsType & any;\n\nconst mapStateToProps = (state: AppStateType): DialogsPageType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n    };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<DialogsReducerActionsType>): MapDispatchToPropsType => {\n    return {\n        sendMessage: (newMessageBody: string) => dispatch(sendMessageAC(newMessageBody))\n    };\n};\n\nconst DialogsContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRedirectToLogin\n)(Dialogs);\n\nexport default DialogsContainer;","import React from 'react';\nimport styles from './FormControls.module.css';\n\nconst FormControl = ({meta: {touched, error}, children}: any) => {\n    const isError = touched && error;\n    return (\n        <div className={isError ? `${styles.formControl} ${styles.error}` : ''}>\n            <div>{children}</div>\n            {isError && <span>{error}</span>}\n        </div>\n    );\n};\n\nexport const Textarea = (props: any) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}>\n            <textarea\n                cols={30}\n                rows={3}\n                {...input}\n                {...restProps}\n            />\n        </FormControl>\n    );\n};\n\nexport const Input = (props: any) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}>\n            <input\n                {...input}\n                {...restProps}\n            />\n        </FormControl>\n    );\n};","import React, {ComponentType} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../redux/redux-store';\n\ntype MapStateToPropsType = { isAuth: boolean };\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: state.auth.isAuth,\n    } as MapStateToPropsType;\n};\n\nexport function withRedirectToLogin<T>(Component: ComponentType<T>) {\n    class RedirectComponent extends React.Component<MapStateToPropsType> {\n        render() {\n            const {isAuth, ...restProps} = this.props;\n            if (!isAuth) return <Redirect to=\"/login\"/>\n            return <Component {...restProps as T}/>\n        }\n    }\n    return connect(mapStateToProps)(RedirectComponent);\n}","export const requiredField = (value: any) => {\n    if (value) return undefined;\n    return 'field is required';\n};\n\nconst maxLength = (max: number) => (value: string | any[]) =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\nexport const maxLength30 = maxLength(30)\n\nconst minLength = (min: number) => (value: string | any[]) =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\nexport const minLength2 = minLength(2)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__Bze--\",\"error\":\"FormControls_error__rGNdT\",\"formSummaryError\":\"FormControls_formSummaryError__zOU5q\"};"],"names":["DialogItem","props","to","id","name","Message","className","styles","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","maxLength30","minLength2","placeholder","cols","rows","compose","connect","state","dialogs","dialogsPage","messages","dispatch","sendMessage","newMessageBody","sendMessageAC","withRedirectToLogin","dialogElements","map","d","messagesElements","m","values","FormControl","meta","touched","error","children","isError","input","restProps","Input","mapStateToProps","isAuth","auth","Component","RedirectComponent","this","React","max","min","value","length","undefined"],"sourceRoot":""}